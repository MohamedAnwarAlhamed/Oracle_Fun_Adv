CREATE OR REPLACE PROCEDURE UPDATE_SAL (P_EMP_ID IN NUMBER, P_AMOUNT IN NUMBER) 
IS
BEGIN
    UPDATE EMPLOYEES
    SET SALARY=SALARY+P_AMOUNT
    WHERE EMPLOYEE_ID=P_EMP_ID;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE (SQLCODE);
        DBMS_OUTPUT.PUT_LINE (SQLERRM);
END;
 --==============================================
SELECT *
FROM USER_OBJECTS
WHERE OBJECT_NAME='UPDATE_SAL';
 --==============================================
CREATE OR REPLACE PROCEDURE QUERY_EMP ( P_EMP_ID EMPLOYEES.EMPLOYEE_IDSTYPE, P_F_NAME OUT EMPLOYEES.FIRST_NAME&TYPE, P_SAL OUT EMPLOYEES.SALARY&TYPE ) 
IS
BEGIN
    SELECT FIRST_NAME, SALARY INTO P_F_NAME, P_SAL
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID=P_EMP_ID;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLCODE);
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;

VARIABLE B_FIRST_NAME VARCHAR2(100);
VARIABLE B_SAL NUMBER;
EXECUTE QUERY_EMP(105, :B_FIRST_NAME, :B_SAL);
 --==========
DECLARE
    V_FIRST_NAME EMPLOYEES.FIRST NAMESTYPE;
    V_SAL EMPLOYEES.SALARYSTYPE;
BEGIN
    QUERY_EMP(105, V_FIRST_NAME, V_SAL);
    DBMS_OUTPUT.PUT_LINE(V_FIRST_NAME);
    DBMS_OUTPUT.PUT_LINE(V_SAL);
END;
 --==============================================
CREATE OR REPLACE PROCEDURE FORMATE_TEL ( P_TEL IN OUT VARCHAR2 ) 
IS
BEGIN
    TEL:=SUBSTR(P_TEL, 1, 3) ||' (' || SUBSTR(P_TEL, 4, 2) ||')' || SUBSTR(P_TEL, 7);
END;

VARIABLE B_TELEPHONE VARCHAR2(20);
EXECUTE B_TELEPHONE:='971505914988';
EXECUTE FORMATE_TEL(:B_TELEPHONE);
PRINT B_TELEPHONE;
DECLARE
    V_TEL VARCHAR2(100):='971505914988';
BEGIN
    FORMATE_TEL (V_TEL);
    DBMS_OUTPUT.PUT_LINE (V_TEL);
END;
 --==============================================
CREATE OR REPLACE PROCEDURE ADD_PRODUCTS ( P_PROD_ID NUMBER, P_PROD_NAME VARCHAR2, P_PROD_TYPE VARCHAR2 )
IS
BEGIN
    INSERT INTO PRODUCTS VALUES ( P_PROD_ID, P_PROD_NAME, P_PROD_TYPE);
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE ('error in insert ');
        DBMS_OUTPUT.PUT_LINE (SQLCODE);
        DBMS_OUTPUT.PUT_LINE (SQLERRM);
END;

EXECUTE ADD_PRODUCTS (1, 'Laptop', 'SW');
EXECUTE ADD_PRODUCTS_PROD_ID=>2, P_PROD_NAME=>'PC', P_PROD_TYPE=>'SW');
EXECUTE ADD_PRODUCTS ( P_PROD_NAME=>'Keyboard', P_PROD_ID=>3, P_PROD_TYPE=>'HD');
 --==============================================
CREATE OR REPLACE PROCEDURE ADD_PRODUCTS ( P_PROD_ID NUMBER, P_PROD_NAME VARCHAR2:='Ukowun', P_PROD_TYPE VARCHAR2 DEFAULT 'Ukowun' ) 
IS
BEGIN
    INSERT INTO PRODUCTS VALUES (P_PROD_ID, P_PROD_NAME, P_PROD_TYPE);
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE ('error in insert ');
        DBMS_OUTPUT.PUT_LINE (SQLCODE);
        DBMS_OUTPUT.PUT_LINE (SQLERRM);
END;
 --==============================================
CREATE OR REPLACE PROCEDURE ADD_PRODUCTS ( P_PROD_ID NUMBER, P_PROD_NAME VARCHAR2:='Ukowun', P_PROD_TYPE VARCHAR2 DEFAULT 'Ukowun' )
IS
BEGIN
    INSERT INTO PRODUCTS VALUES ( P_PROD_ID, P_PROD_NAME, P_PROD_TYPE);
    DBMS_OUTPUT.PUT_LINE(P_PROD_ID ||' '||P_PROD_NAME || 'INSERTED');
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE ('error in insert ' || P_PROD_ID ||' ' ||P_PROD_NAME);
        DBMS_OUTPUT.PUT_LINE (SQLCODE);
        DBMS_OUTPUT.PUT_LINE (SQLERRM);
END;
 --==============================================
CREATE OR REPLACE PROCEDURE ADD_PRODUCTS (P_PROD_ID NUMBER, P_PROD_NAME VARCHAR2:='Ukowun', P_PROD_TYPE VARCHAR2 DEFAULT 'Ukowun')
IS
BEGIN
    INSERT INTO PRODUCTS VALUES ( P_PROD_ID, P_PROD_NAME, P_PROD_TYPE);
    DBMS_OUTPUT.PUT_LINE(P_PROD_ID ||' '||P_PROD_NAME ||' inserted' );
    COMMIT;
END;
--==============================================
BEGIN
    ADD_PRODUCTS (10, 'PC');
    ADD_PRODUCTS (10, 'Labtop');
    ADD_PRODUCTS (20, 'Keyboard');
    COMMIT;
END;