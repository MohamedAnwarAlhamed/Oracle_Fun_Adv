DECLARE
    V_ROWS_UPDATED NUMBER:=0;
BEGIN
    UPDATE EMPLOYEES
    SET SALARY=SALARY+100
    WHERE DEPARTMENT_ID = 20;
    V_ROWS_UPDATED:=SQL&ROWCOUNT;
    DBMS_OUTPUT.PUT_LINE('the records that updated: '||V_ROWS_UPDATED);
END;
 --==============================================
SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (100, 200)
ORDER BY 1 FOR UPDATE;
COMMIT;
 --==============================================
SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (100, 200)
ORDER BY1 FOR UPDATE NOWAIT;
 --==============================================
SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (100, 200)
ORDER BY 1 FOR UPDATE WAIT 30;
 --==============================================
 --for update + current of
DECLARE
    CURSOR C_EMP_DEPT30 IS
    SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=30 FOR UPDATE;
BEGIN
    FOR I IN C_EMP_DEPT30 LOOP
        UPDATE EMPLOYEES
        SET SALARY=SALARY+1
        WHERE CURRENT OF C_EMP_DEPT30;
    END LOOP COMMIT;
END;
 --==============================================
DECLARE
    CURSOR C_EMP_DEPT ( V_DEPT NUMBER ) IS
    SELECT EMPLOYEE_ID, FIRST_NAME
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=V_DEPT;
    
    V_EMPNO  EMPLOYEES.EMPLOYEE_ID&TYPE;
    V_FIRST_NAME EMPLOYEES.FIRST_NAME&TYPE;
BEGIN
    OPEN C_EMP_DEPT (10);
    DBMS_OUTPUT.PUT_LINE('dept 10 contains:');
    LOOP
        FETCH C_EMP_DEPT INTO V_EMPNO, V_FIRST_NAME;
        EXIT WHEN C_EMP_DEPTNOTFOUND;
        DBMS_OUTPUT.PUT_LINE (V_EMPNO ||' '||V_FIRST_NAME);
    END LOOP;

    CLOSE C_EMP_DEPT;
    OPEN C_EMP_DEPT(20);
    DBMS_OUTPUT.PUT_LINE('dept 20 contains:');
    LOOP
        FETCH C_EMP_DEPT INTO V_EMPNO, V_FIRST_NAME;
        EXIT WHEN C_EMP_DEPTNOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_EMPNO ||' '||V_FIRST_NAME);
    END LOOP;

    CLOSE C_EMP_DEPT;
END;
 --==============================================
DECLARE
    CURSOR C_EMP_DEPT (V_DEPT NUMBER) IS
    SELECT EMPLOYEE_ID, FIRST NAME
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=V_DEPT;
BEGIN
    DBMS_OUTPUT.PUT_LINE('dept 10 contains:');
    FOR I IN C_EMP_DEPT (10) LOOP
        DBMS_OUTPUT.PUT_LINE(I.EMPLOYEE_ID ||' ' ||I.FIRST_NAME);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('dept 20 contains:"');
    FOR J IN C_EMP_DEPT (20) LOOP
        DBMS_OUTPUT.PUT_LINE(J.EMPLOYEE_ID ||' ' ||J.FIRST_NAME);
    END LOOP;
END;
 --==============================================
DECLARE
    CURSOR CL_EMP_DEPT30 IS
    SELECT EMPLOYEE_ID, FIRST_NAME
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=30;
    V_EMPNO EMPLOYEES.EMPLOYEE_ID&TYPE;
    V_FIRST_NAME EMPLOYEES.FIRST_NAME&TYPE;
BEGIN
    OPEN C_EMP_DEPT30;
    LOOP
        FETCH C_EMP_DEPT30 INTO V_EMPNO, V_FIRST_NAME;
        EXIT WHEN C_EMP_DEPT30%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(V_EMPNO ||' '||V_FIRST_NAME);
    END LOOP;

    CLOSE C_EMP_DEPT30;
END;
 --==============================================
DECLARE
    CURSOR C_EMP_DEPT30 IS
    SELECT EMPLOYEE_ID, FIRST_NAME
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=30;
    
    V_EMP_REC EMPLOYEES&ROWTYPE;
BEGIN
    OPEN C_EMP_DEPT30;
    LOOP
        FETCH C_EMP_DEPT30 INTO V_EMP_REC.EMPLOYEE_ID, V_EMP_REC.FIRST_NAME;
        EXIT WHEN C_EMP_DEPT30%NOT FOUND;
        DBMS_OUTPUT.PUT_LINE (V_EMP_REC.EMPLOYEE_ID ||' ' ||V_EMP_REC.FIRST_NAME);
    END LOOP;

    CLOSE C_EMP_DEPT30;
END;
 --==============================================
DECLARE
    CURSOR C_EMP_DEPT30 IS
    SELECT EMPLOYEE_ID, FIRST_NAME
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=30;
    
    V_EMP_REC C_EMP_DEPT30%ROWTYPE;
BEGIN
    OPEN C_EMP_DEPT30;
    LOOP
        FETCH C_EMP_DEPT30 INTO V_EMP_REC;
        EXIT WHEN C_EMP_DEPT30%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE (V_EMP_REC.EMPLOYEE_ID ||' 'ILV_EMP_REC.FIRST_NAME);
    END LOOP;

    CLOSE C_EMP_DEPT30;
END;
 --==============================================
DECLARE
    CURSOR C_EMP_DEPT30 IS
    SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=30;
    
    V_EMPNO      EMPLOYEES.EMPLOYEE_IDSTYPE;
    V_FIRST_NAME EMPLOYEES.FIRST_NAME&TYPE;
    V_SALARY     EMPLOYEES.SALARYSTYPE;
BEGIN
    OPEN C_EMP_DEPT30;
    LOOP
        FETCH C_EMP_DEPT30 INTO V_EMPNO, V_FIRST_NAME, V_SALARY;
        EXIT WHEN C_EMP_DEPT30%NOT FOUND;
        UPDATE EMPLOYEES
        SET SALARY=SALARY+100
        WHERE EMPLOYEE_ID=V_EMPNO;
    END LOOP;

    CLOSE C_EMP_DEPT30;
    COMMIT;
END;
 --==============================================
DECLARE
    CURSOR C_EMP IS
    SELECT EMPLOYEE_ID, FIRST_NAME
    FROM EMPLOYEES;
    V_FIRST_NAME EMPLOYEES.FIRST_NAME&TYPE;
    V_EMPNO EMPLOYEES.EMPLOYEE_ID&TYPE;
BEGIN
    IF CEMPTISOPEN THEN NULL;
    ELSE
        OPEN C_EMP;
    END IF;

    DBMS_OUTPUT.PUT_LINE('the counter for cursor now is ' ||C_EMP&ROWCOUNT);
    LOOP
        FETCH C_EMP INTO V_EMPNO, V_FIRST_NAME;
        EXIT WHEN C_EMP&NOTFOUND OR C_EMP&ROWCOUNT>10;
        DBMS_OUTPUT.PUT_LINE(V_EMPNO ||' ' ||V_FIRST_NAME);
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('the counter for cursor now is '|| C_EMP&ROWCOUNT);
    CLOSE C_EMP;
END;
 --==============================================
DECLARE
    CURSOR C_EMP_DEPT30 IS
    SELECT EMPLOYEE_ID, FIRST_NAME
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=30;
BEGIN
    FOR I IN C_EMP_DEPT30 LOOP
        DBMS_OUTPUT.PUT_LINE(I.EMPLOYEE_ID ||' '||I.FIRST_NAME);
    END LOOP;
END;
 --==============================================
DECLARE
BEGIN
    FOR I IN (
        SELECT EMPLOYEE_ID, FIRST_NAME
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID=30
    ) LOOP
        DBMS_OUTPUT.PUT_LINE(EMPLOYEE_ID ||' ' ||I.FIRST_NAME);
    END LOOP;
END;
 --==============================================
DECLARE
    V_ROWS_EXIST BOOLEAN:=TRUE;
BEGIN
    UPDATE EMPLOYEES
    SET SALARY=SALARY+100
    WHERE DEPARTMENT_ID = 9999;
    V_ROWS_EXIST:=SQL&FOUND;
    IF V_ROWS_EXIST=FALSE THEN
        DBMS_OUTPUT.PUT_LINE(' the sql contains no records retrieved');
    ELSE
        DBMS_OUTPUT.PUT_LINE('the sql contains records retrieved' || SQLSROWCOUNT);
    END IF;
END;